// <auto-generated />
using System;
using Common.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Common.Migrations
{
    //[DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot // : ModelSnapshot
    {
//        protected override void BuildModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "7.0.11")
//                .HasAnnotation("Relational:MaxIdentifierLength", 63);

//            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

//            modelBuilder.Entity("Common.EntityFramework.Models.Asset", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

//                    b.Property<int>("DealId")
//                        .HasColumnType("integer")
//                        .HasColumnName("dealid");

//                    b.Property<byte[]>("ImageData")
//                        .HasColumnType("bytea")
//                        .HasColumnName("imagedata");

//                    b.Property<string>("ImageName")
//                        .HasColumnType("text")
//                        .HasColumnName("imagename");

//                    b.HasKey("Id");

//                    b.HasIndex("DealId");

//                    b.ToTable("assets");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.Bet", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

//                    b.Property<decimal>("CurrentBet")
//                        .HasColumnType("numeric")
//                        .HasColumnName("currentbet");

//                    b.Property<int>("DealId")
//                        .HasColumnType("integer")
//                        .HasColumnName("dealid");

//                    b.Property<DateTime?>("TimeStamp")
//                        .HasColumnType("timestamp with time zone")
//                        .HasColumnName("timestamp");

//                    b.Property<int>("UserId")
//                        .HasColumnType("integer")
//                        .HasColumnName("userid");

//                    b.HasKey("Id");

//                    b.HasIndex("DealId");

//                    b.ToTable("bets");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.Deal", b =>
//                {
//                    b.Property<int?>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

//                    b.Property<bool?>("CanBuyNow")
//                        .HasColumnType("boolean")
//                        .HasColumnName("canbuynow");

//                    b.Property<int?>("CategoryId")
//                        .HasColumnType("integer")
//                        .HasColumnName("categoryid");

//                    b.Property<DateTime?>("EndTime")
//                        .HasColumnType("timestamp with time zone")
//                        .HasColumnName("endtime");

//                    b.Property<bool?>("IsChecked")
//                        .HasColumnType("boolean")
//                        .HasColumnName("ischecked");

//                    b.Property<string>("LongDesc")
//                        .HasColumnType("text")
//                        .HasColumnName("longdesc");

//                    b.Property<string>("PartNumber")
//                        .HasColumnType("text")
//                        .HasColumnName("partnumber");

//                    b.Property<double?>("PriceBuyNow")
//                        .HasColumnType("double precision")
//                        .HasColumnName("pricebuynow");

//                    b.Property<string>("ProductName")
//                        .HasColumnType("text")
//                        .HasColumnName("productname");

//                    b.Property<double?>("Quantity")
//                        .HasColumnType("double precision")
//                        .HasColumnName("quantity");

//                    b.Property<string>("ShortDesc")
//                        .HasColumnType("text")
//                        .HasColumnName("shortdesc");

//                    b.Property<double?>("StartBet")
//                        .HasColumnType("double precision")
//                        .HasColumnName("startbet");

//                    b.Property<DateTime?>("StartTime")
//                        .HasColumnType("timestamp with time zone")
//                        .HasColumnName("starttime");

//                    b.Property<int?>("StatusId")
//                        .HasColumnType("integer")
//                        .HasColumnName("statusid");

//                    b.Property<string>("UoM")
//                        .HasColumnType("text")
//                        .HasColumnName("uom");

//                    b.Property<int?>("UserId")
//                        .HasColumnType("integer")
//                        .HasColumnName("userid");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("deals");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.PassData", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

//                    b.Property<string>("PassHash")
//                        .HasColumnType("text")
//                        .HasColumnName("passhash");

//                    b.Property<string>("SecretPhraseHash")
//                        .HasColumnType("text")
//                        .HasColumnName("secretphrasehash");

//                    b.Property<int>("UserId")
//                        .HasColumnType("integer")
//                        .HasColumnName("userid");

//                    b.HasKey("Id");

//                    b.ToTable("passdata");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.User", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

//                    b.Property<double?>("Balance")
//                        .HasColumnType("double precision")
//                        .HasColumnName("balance");

//                    b.Property<string>("BankAccount")
//                        .HasColumnType("text")
//                        .HasColumnName("bankaccount");

//                    b.Property<string>("BankCode")
//                        .HasColumnType("text")
//                        .HasColumnName("bankcode");

//                    b.Property<string>("CompanyName")
//                        .HasColumnType("text")
//                        .HasColumnName("companyname");

//                    b.Property<string>("Email")
//                        .HasColumnType("text")
//                        .HasColumnName("email");

//                    b.Property<string>("FirstName")
//                        .HasColumnType("text")
//                        .HasColumnName("firstname");

//                    b.Property<bool>("IsActive")
//                        .HasColumnType("boolean")
//                        .HasColumnName("isactive");

//                    b.Property<string>("LastName")
//                        .HasColumnType("text")
//                        .HasColumnName("lastname");

//                    b.Property<string>("Locale")
//                        .HasColumnType("text")
//                        .HasColumnName("locale");

//                    b.Property<string>("PassportNumber")
//                        .HasColumnType("text")
//                        .HasColumnName("passportnumber");

//                    b.Property<string>("PayerRegNumber")
//                        .HasColumnType("text")
//                        .HasColumnName("payerregnumber");

//                    b.Property<string>("Phone")
//                        .HasColumnType("text")
//                        .HasColumnName("phone");

//                    b.Property<int>("UserTypeId")
//                        .HasColumnType("integer")
//                        .HasColumnName("usertypeid");

//                    b.Property<string>("Username")
//                        .HasColumnType("text")
//                        .HasColumnName("username");

//                    b.HasKey("Id");

//                    b.HasIndex("UserTypeId");

//                    b.ToTable("users");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.UserSession", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

//                    b.Property<DateTime>("LastChangeTimeStamp")
//                        .HasColumnType("timestamp with time zone")
//                        .HasColumnName("lastchangetimestamp");

//                    b.Property<string>("Locale")
//                        .HasColumnType("text")
//                        .HasColumnName("locale");

//                    b.Property<DateTime>("LoginTimeStamp")
//                        .HasColumnType("timestamp with time zone")
//                        .HasColumnName("logintimestamp");

//                    b.Property<int>("UserId")
//                        .HasColumnType("integer")
//                        .HasColumnName("userid");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("usersession");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.UserType", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

//                    b.Property<string>("TypeName")
//                        .HasColumnType("text")
//                        .HasColumnName("typename");

//                    b.HasKey("Id");

//                    b.ToTable("usertype");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.WatchDeal", b =>
//                {
//                    b.Property<int?>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("integer")
//                        .HasColumnName("id");

//                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

//                    b.Property<int?>("DealId")
//                        .HasColumnType("integer")
//                        .HasColumnName("dealid");

//                    b.Property<int?>("UserId")
//                        .HasColumnType("integer")
//                        .HasColumnName("userid");

//                    b.HasKey("Id");

//                    b.HasIndex("DealId");

//                    b.HasIndex("UserId");

//                    b.ToTable("watchdeal");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.Asset", b =>
//                {
//                    b.HasOne("Common.EntityFramework.Models.Deal", null)
//                        .WithMany("Assets")
//                        .HasForeignKey("DealId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.Bet", b =>
//                {
//                    b.HasOne("Common.EntityFramework.Models.Deal", null)
//                        .WithMany("Bets")
//                        .HasForeignKey("DealId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.Deal", b =>
//                {
//                    b.HasOne("Common.EntityFramework.Models.User", null)
//                        .WithMany("Deals")
//                        .HasForeignKey("UserId");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.User", b =>
//                {
//                    b.HasOne("Common.EntityFramework.Models.UserType", "UserType")
//                        .WithMany()
//                        .HasForeignKey("UserTypeId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("UserType");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.UserSession", b =>
//                {
//                    b.HasOne("Common.EntityFramework.Models.User", "user")
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("user");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.WatchDeal", b =>
//                {
//                    b.HasOne("Common.EntityFramework.Models.Deal", null)
//                        .WithMany("WatchDeals")
//                        .HasForeignKey("DealId");

//                    b.HasOne("Common.EntityFramework.Models.User", null)
//                        .WithMany("WatchDeals")
//                        .HasForeignKey("UserId");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.Deal", b =>
//                {
//                    b.Navigation("Assets");

//                    b.Navigation("Bets");

//                    b.Navigation("WatchDeals");
//                });

//            modelBuilder.Entity("Common.EntityFramework.Models.User", b =>
//                {
//                    b.Navigation("Deals");

//                    b.Navigation("WatchDeals");
//                });
//#pragma warning restore 612, 618
//        }
    }
}
